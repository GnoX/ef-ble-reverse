# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: wn511_sys.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0fwn511_sys.proto\x12\twn511_sys\"\x99\x18\n\x12inverter_heartbeat\x12\x14\n\x0cinv_err_code\x18\x01 \x01(\r\x12\x15\n\rinv_warn_code\x18\x03 \x01(\r\x12\x14\n\x0cpv1_err_code\x18\x02 \x01(\r\x12\x15\n\rpv1_warn_code\x18\x04 \x01(\r\x12\x14\n\x0cpv2_err_code\x18\x05 \x01(\r\x12\x18\n\x10pv2_warning_code\x18\x06 \x01(\r\x12\x14\n\x0c\x62\x61t_err_code\x18\x07 \x01(\r\x12\x18\n\x10\x62\x61t_warning_code\x18\x08 \x01(\r\x12\x14\n\x0cllc_err_code\x18\t \x01(\r\x12\x18\n\x10llc_warning_code\x18\n \x01(\r\x12\x12\n\npv1_statue\x18\x0b \x01(\r\x12\x12\n\npv2_statue\x18\x0c \x01(\r\x12\x12\n\nbat_statue\x18\r \x01(\r\x12\x12\n\nllc_statue\x18\x0e \x01(\r\x12\x12\n\ninv_statue\x18\x0f \x01(\r\x12\x16\n\x0epv1_input_volt\x18\x10 \x01(\x05\x12\x16\n\x0epv1_vol_in_tag\x18\x11 \x01(\x05\x12\x15\n\rpv1_input_cur\x18\x12 \x01(\x05\x12\x17\n\x0fpv1_input_watts\x18\x13 \x01(\x05\x12\x10\n\x08pv1_temp\x18\x14 \x01(\x05\x12\x16\n\x0epv2_input_volt\x18\x15 \x01(\x05\x12\x16\n\x0epv2_vol_in_tag\x18\x16 \x01(\x05\x12\x15\n\rpv2_input_cur\x18\x17 \x01(\x05\x12\x17\n\x0fpv2_input_watts\x18\x18 \x01(\x05\x12\x10\n\x08pv2_temp\x18\x19 \x01(\x05\x12\x16\n\x0e\x62\x61t_input_volt\x18\x1a \x01(\x05\x12\x13\n\x0b\x62\x61t_op_volt\x18\x1b \x01(\x05\x12\x15\n\rbat_input_cur\x18\x1c \x01(\x05\x12\x17\n\x0f\x62\x61t_input_watts\x18\x1d \x01(\x05\x12\x10\n\x08\x62\x61t_temp\x18\x1e \x01(\x05\x12\x0f\n\x07\x62\x61t_soc\x18\x1f \x01(\r\x12\x16\n\x0ellc_input_volt\x18  \x01(\x05\x12\x13\n\x0bllc_op_volt\x18! \x01(\x05\x12\x10\n\x08llc_temp\x18\" \x01(\x05\x12\x16\n\x0einv_input_volt\x18# \x01(\x05\x12\x13\n\x0binv_op_volt\x18$ \x01(\x05\x12\x16\n\x0einv_output_cur\x18% \x01(\x05\x12\x18\n\x10inv_output_watts\x18& \x01(\x05\x12\x10\n\x08inv_temp\x18\' \x01(\x05\x12\x10\n\x08inv_freq\x18( \x01(\x05\x12\x12\n\ninv_dc_cur\x18) \x01(\x05\x12\x0f\n\x07\x62p_type\x18* \x01(\x05\x12\x18\n\x10inv_relay_status\x18+ \x01(\x05\x12\x18\n\x10pv1_relay_status\x18, \x01(\x05\x12\x18\n\x10pv2_relay_status\x18- \x01(\x05\x12\x17\n\x0finstall_country\x18. \x01(\r\x12\x14\n\x0cinstall_town\x18/ \x01(\r\x12\x17\n\x0fpermanent_watts\x18\x30 \x01(\r\x12\x15\n\rdynamic_watts\x18\x31 \x01(\r\x12\x17\n\x0fsupply_priority\x18\x32 \x01(\r\x12\x13\n\x0blower_limit\x18\x33 \x01(\r\x12\x13\n\x0bupper_limit\x18\x34 \x01(\r\x12\x12\n\ninv_on_off\x18\x35 \x01(\r\x12\x19\n\x11wireless_err_code\x18\x36 \x01(\r\x12\x1a\n\x12wireless_warn_code\x18\x37 \x01(\r\x12\x16\n\x0einv_brightness\x18\x38 \x01(\r\x12\x1b\n\x13heartbeat_frequency\x18\x39 \x01(\r\x12\x13\n\x0brated_power\x18: \x01(\r\x12\x17\n\x0f\x63hg_remain_time\x18; \x01(\r\x12\x17\n\x0f\x64sg_remain_time\x18< \x01(\r\x12\x14\n\x0c\x66\x65\x65\x64_protect\x18= \x01(\r\x12\x17\n\x0fpv_to_inv_watts\x18> \x01(\x05\x12\x17\n\x0fgrid_cons_watts\x18? \x01(\x05\x12\x18\n\x10plug_total_watts\x18@ \x01(\x05\x12\x19\n\x11inv_to_plug_watts\x18\x41 \x01(\x05\x12\x1a\n\x12space_demand_watts\x18\x42 \x01(\x05\x12\x18\n\x10inv_demand_watts\x18\x43 \x01(\x05\x12\x1b\n\x13interface_conn_flag\x18\x44 \x01(\r\x12\x1e\n\x16pv1_ctrl_mppt_off_flag\x18\x45 \x01(\r\x12\x1e\n\x16pv2_ctrl_mppt_off_flag\x18\x46 \x01(\r\x12\x14\n\x0c\x62\x61t_off_flag\x18G \x01(\r\x12\x14\n\x0cllc_off_flag\x18H \x01(\r\x12\x13\n\x0b\x61\x63_off_flag\x18I \x01(\r\x12\x17\n\x0f\x62ms_req_chg_vol\x18J \x01(\r\x12\x17\n\x0f\x62ms_req_chg_amp\x18K \x01(\r\x12\x19\n\x11uwload_limit_flag\x18L \x01(\r\x12\x1b\n\x13inv_load_limit_flag\x18M \x01(\r\x12\x1b\n\x13\x62\x61t_load_limit_flag\x18N \x01(\r\x12\x1b\n\x13\x61nti_back_flow_flag\x18O \x01(\r\x12\x12\n\nuwsoc_flag\x18P \x01(\r\x12\x18\n\x10uwlow_light_flag\x18Q \x01(\r\x12\x1a\n\x12inv_to_other_watts\x18R \x01(\r\x12\x11\n\twifi_rssi\x18S \x01(\x05\x12\x12\n\nbat_system\x18T \x01(\r\x12\x17\n\x0f\x66load_limit_out\x18U \x01(\r\x12\x1d\n\x15inv_output_load_limit\x18V \x01(\r\x12\x1d\n\x15\x62\x61t_output_load_limit\x18W \x01(\r\x12\x1f\n\x17pv_power_limit_ac_power\x18\x62 \x01(\r\x12 \n\x18\x62\x61t_error_inv_load_limit\x18\x63 \x01(\r\x12\x14\n\x0creset_reason\x18\x64 \x01(\r\x12\x13\n\x0breset_count\x18\x65 \x01(\r\x12\x0f\n\x07mesh_id\x18\x66 \x01(\r\x12\x12\n\nmesh_layel\x18g \x01(\r\x12\x10\n\x08self_mac\x18h \x01(\r\x12\x12\n\nparent_mac\x18i \x01(\r\x12\x13\n\x0bsta_ip_addr\x18j \x01(\x05\x12\x10\n\x08gene_num\x18k \x01(\x05\x12\x10\n\x08\x63ons_num\x18l \x01(\x05\x12\x11\n\tgene_watt\x18m \x01(\x05\x12\x11\n\tcons_watt\x18n \x01(\x05\x12\x10\n\x08wifi_err\x18o \x01(\x05\x12\x15\n\rwifi_err_time\x18p \x01(\x05\x12\x10\n\x08mqtt_err\x18q \x01(\x05\x12\x15\n\rmqtt_err_time\x18r \x01(\x05\x12\x12\n\nstack_free\x18s \x01(\r\x12\x16\n\x0estack_min_free\x18t \x01(\r\x12\x19\n\x11mqtt_tls_last_err\x18u \x01(\r\x12\x1a\n\x12mqtt_tls_stack_err\x18v \x01(\r\x12\x17\n\x0fmqtt_sock_errno\x18w \x01(\r\x12\x14\n\x0c\x61\x63_set_watts\x18x \x01(\r\x12\x1c\n\x14mqtt_last_dis_reason\x18y \x01(\r\x12 \n\x18mqtt_connect_return_code\x18z \x01(\r\x12\x1d\n\x15wifi_firmware_version\x18{ \x01(\r\x12\x1c\n\x14wifi_connect_channel\x18| \x01(\r\x12\x19\n\x11wifi_encrypt_mode\x18} \x01(\r\x12\x11\n\tfiso_rxyz\x18~ \x01(\x02\x12\x1f\n\x17history_pv_to_inv_watts\x18\x7f \x01(\x05\x12 \n\x17history_bat_input_watts\x18\x80\x01 \x01(\x05\x12!\n\x18history_inv_output_watts\x18\x81\x01 \x01(\x05\x12 \n\x17history_grid_cons_watts\x18\x82\x01 \x01(\x05\x12!\n\x18history_plug_total_watts\x18\x83\x01 \x01(\x05\x12\"\n\x19history_inv_to_plug_watts\x18\x84\x01 \x01(\x05\x12 \n\x17history_permanent_watts\x18\x85\x01 \x01(\r\x12\x17\n\x0e\x65sp_tempsensor\x18\x86\x01 \x01(\x05\x12\x14\n\x0bnoise_floor\x18\x87\x01 \x01(\r\x12\x17\n\x0erssi_threshold\x18\x88\x01 \x01(\x05\x12\x16\n\rrssi_variance\x18\x89\x01 \x01(\x05\"/\n\x14permanent_watts_pack\x12\x17\n\x0fpermanent_watts\x18\x01 \x01(\x05\"/\n\x14supply_priority_pack\x12\x17\n\x0fsupply_priority\x18\x01 \x01(\x05\"%\n\x0e\x62\x61t_lower_pack\x12\x13\n\x0blower_limit\x18\x01 \x01(\x05\"%\n\x0e\x62\x61t_upper_pack\x12\x13\n\x0bupper_limit\x18\x01 \x01(\x05\"%\n\x0f\x62rightness_pack\x12\x12\n\nbrightness\x18\x01 \x01(\x05\"?\n\x11\x41\x43_max_watts_pack\x12\x14\n\x0c\x41\x43_set_watts\x18\x01 \x01(\r\x12\x14\n\x0c\x41\x43_max_watts\x18\x02 \x01(\r\"#\n\x0emax_watts_pack\x12\x11\n\tmax_watts\x18\x01 \x01(\x05\"\xb1\x01\n\tPowerItem\x12\x11\n\ttimestamp\x18\x01 \x01(\r\x12\x10\n\x08timezone\x18\x02 \x01(\x11\x12\x19\n\x11inv_to_grid_power\x18\x03 \x01(\r\x12\x19\n\x11inv_to_plug_power\x18\x04 \x01(\r\x12\x15\n\rbattery_power\x18\x05 \x01(\x05\x12\x18\n\x10pv1_output_power\x18\x06 \x01(\r\x12\x18\n\x10pv2_output_power\x18\x07 \x01(\r\"L\n\tPowerPack\x12\x0f\n\x07sys_seq\x18\x01 \x01(\r\x12.\n\x10sys_power_stream\x18\x02 \x03(\x0b\x32\x14.wn511_sys.PowerItem\"\x1f\n\x0cPowerAckPack\x12\x0f\n\x07sys_seq\x18\x01 \x01(\r\"\'\n\x0cnode_massage\x12\n\n\x02sn\x18\x01 \x01(\t\x12\x0b\n\x03mac\x18\x02 \x01(\x0c\")\n\x11\x66\x65\x65\x64_protect_pack\x12\x14\n\x0c\x66\x65\x65\x64_protect\x18\x01 \x01(\r\"\xba\x01\n\x14mesh_child_node_info\x12\x15\n\rtopology_type\x18\x01 \x01(\r\x12\x15\n\rmesh_protocol\x18\x02 \x01(\r\x12\x1a\n\x12max_sub_device_num\x18\x03 \x01(\r\x12\x15\n\rparent_mac_id\x18\x04 \x01(\x0c\x12\x0f\n\x07mesh_id\x18\x05 \x01(\x0c\x12\x30\n\x0fsub_device_list\x18\x06 \x03(\x0b\x32\x17.wn511_sys.node_massage')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'wn511_sys_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _INVERTER_HEARTBEAT._serialized_start=31
  _INVERTER_HEARTBEAT._serialized_end=3128
  _PERMANENT_WATTS_PACK._serialized_start=3130
  _PERMANENT_WATTS_PACK._serialized_end=3177
  _SUPPLY_PRIORITY_PACK._serialized_start=3179
  _SUPPLY_PRIORITY_PACK._serialized_end=3226
  _BAT_LOWER_PACK._serialized_start=3228
  _BAT_LOWER_PACK._serialized_end=3265
  _BAT_UPPER_PACK._serialized_start=3267
  _BAT_UPPER_PACK._serialized_end=3304
  _BRIGHTNESS_PACK._serialized_start=3306
  _BRIGHTNESS_PACK._serialized_end=3343
  _AC_MAX_WATTS_PACK._serialized_start=3345
  _AC_MAX_WATTS_PACK._serialized_end=3408
  _MAX_WATTS_PACK._serialized_start=3410
  _MAX_WATTS_PACK._serialized_end=3445
  _POWERITEM._serialized_start=3448
  _POWERITEM._serialized_end=3625
  _POWERPACK._serialized_start=3627
  _POWERPACK._serialized_end=3703
  _POWERACKPACK._serialized_start=3705
  _POWERACKPACK._serialized_end=3736
  _NODE_MASSAGE._serialized_start=3738
  _NODE_MASSAGE._serialized_end=3777
  _FEED_PROTECT_PACK._serialized_start=3779
  _FEED_PROTECT_PACK._serialized_end=3820
  _MESH_CHILD_NODE_INFO._serialized_start=3823
  _MESH_CHILD_NODE_INFO._serialized_end=4009
# @@protoc_insertion_point(module_scope)
